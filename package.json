{
  "name": "mtbva",
  "description": "Mountain Bike Virginia XXC VA Series",
  "version": "0.1.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/coletrane/mountain-bike-virginia"
  },
  "license": "MIT",
  "dependencies": {
    "@fortawesome/fontawesome": "^1.1.8",
    "@fortawesome/fontawesome-free-brands": "^5.0.13",
    "@fortawesome/fontawesome-free-regular": "^5.0.13",
    "@fortawesome/fontawesome-free-solid": "^5.0.13",
    "@fortawesome/vue-fontawesome": "0.0.22",
    "@nuxtjs/axios": "^5.3.1",
    "@nuxtjs/google-analytics": "^2.0.2",
    "@nuxtjs/sitemap": "^0.1.1",
    "babel-polyfill": "^6.26.0",
    "nuxt": "^1.4.2",
    "vue-lazyload": "^1.2.6"
  },
  "peerDependencies": {},
  "devDependencies": {
    "array-move": "^1.0.0",
    "babel-core": "^6.26.3",
    "babel-plugin-transform-es2015-spread": "^6.22.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-es2015-ie": "^6.7.0",
    "babel-preset-stage-2": "^6.22.0",
    "babel-preset-stage-3": "^6.24.1",
    "bootstrap": "^4.1.3",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chromedriver": "^2.41.0",
    "css-loader": "^1.0.0",
    "dotenv": "^5.0.1",
    "eslint": "^4.19.1",
    "eslint-config-standard": "^11.0.0",
    "eslint-plugin-chai-friendly": "^0.4.1",
    "eslint-plugin-html": "^4.0.5",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-mocha": "^4.12.1",
    "eslint-plugin-node": "^5.2.1",
    "eslint-plugin-promise": "^3.8.0",
    "eslint-plugin-standard": "^3.1.0",
    "eslint-plugin-vue": "^4.7.1",
    "execa": "^0.10.0",
    "glob": "^7.1.2",
    "imagemin": "^5.3.1",
    "listr": "^0.14.1",
    "lodash": "^4.17.10",
    "mocha": "^5.2.0",
    "moment": "^2.22.2",
    "prettier": "^1.14.2",
    "readline-sync": "^1.4.9",
    "recursive-readdir": "^2.2.2",
    "request": "^2.88.0",
    "request-promise": "^4.2.2",
    "selenium-webdriver": "^4.0.0-alpha.1",
    "sharp": "^0.20.5",
    "webpack-bundle-analyzer": "^2.13.1"
  },
  "engines": {
    "node": "8.9.3"
  },
  "scripts": {
    "dev": "NODE_ENV=development nuxt",
    "build": "./scripts/dev/check-is-master.sh && npm run build:json && cd ../ && ./s3-sync-mtbva.sh && cd mountain-bike-virginia && NODE_ENV=generate nuxt generate",
    "build:json": "rm ./json/routes/* && node ./scripts/dev/build-routes-json.js && npm run test:json && ./scripts/dev/copy-json.sh",
    "create:post": "node ./scripts/dev/create-post.js",
    "create:post:img": "node ./scripts/dev/create-post.js images",
    "delete:post": "node ./scripts/dev/delete-post.js",
    "analyze": "nuxt build --analyze",
    "clean": "rimraf .nuxt && rimraf ./dist",
    "static": "npm run build:json && NODE_ENV=test nuxt generate && NODE_ENV=test node ./static.js",
    "static:iphone": "npm run build:json && NODE_ENV=iphone nuxt generate && NODE_ENV=test node ./static.js",
    "lint": "eslint --fix **/*.js *.js **/*.vue  --ignore-pattern node_modules --ignore-pattern dist --ignore-pattern .nuxt",
    "test:one": "JUST_ONE=true mocha --require babel-core/register ./test/integration/global.chrome.spec.js --timeout 30000;",
    "test:integration": "mocha --require babel-core/register ./test/integration/global.chrome.spec.js --timeout 30000; mocha --require babel-core/register ./test/integration/global.safari.spec.js --timeout 30000",
    "test:safari": "mocha --require babel-core/register ./test/integration/global.safari.spec.js --timeout 30000",
    "test:unit": "mocha --require babel-core/register ./test/unit/global.spec.js --timeout 30000",
    "test:json": "mocha --require babel-core/register ./test/json/global.spec.js --timeout 30000",
    "test:img": "mocha --require babel-core/register ./test/images.spec.js --timeout 30000",
    "test": "mocha --require babel-core/register ./test/global.spec.js --timeout 30000",
    "deploy:s3": "./scripts/dev/check-is-master.sh && npm run build:json && cd ../ && ./s3-sync-mtbva.sh",
    "deploy:full": "./scripts/dev/check-is-master.sh && NODE_ENV=generate npm run build && ./scripts/dev/deploy-prod.sh"
  },
  "prettier": {
    "semi": false
  },
  "main": "dist/app.bundle.js"
}
